// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  username String
  public_key String
  blog_name String
  profile_hash String?
  bio String?
  twitter String?
  discord String?
  image_url String?
  banner_url String?
  invites Invite[]
  articles Article[]
  drafts Draft[]
}

model Article {
  id Int @id @default(autoincrement())
  title String
  description String
  image_url String
  views Int @default(0)
  on_chain Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime?
  proof_of_post String
  arweave_url String
  slug String
  user_id Int
  owner User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Connection {
  id Int @id @default(autoincrement())
  account String
  connector String
  profile_owner String
}

model Draft {
  id Int @id @default(autoincrement())
  title String
  description String
  image_url String
  source String @default("dapp")
  created_at DateTime @default(now())
  updated_at DateTime?
  blocks Block?
  share_hash String?
  user_id Int
  owner User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Block {
  id Int @id @default(autoincrement())
  data String
  draft_id Int @unique
  draft Draft @relation(fields: [draft_id], references: [id], onDelete: Cascade)
}

model VerifiedTwitter {
  id Int @id @default(autoincrement())
  public_key String
  username String
  twitter_user_id String?
}

model Invite {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  account String
  user_id Int
  sender User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  receiver String
  receiver_name String?
}
